---
# Source: lights-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: lights-api
  labels:
    helm.sh/chart: lights-api-0.1.0
    app.kubernetes.io/name: lights-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: lights-api
    app.kubernetes.io/instance: release-name
---
# Source: lights-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lights-api
  labels:
    helm.sh/chart: lights-api-0.1.0
    app.kubernetes.io/name: lights-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: lights-api
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: lights-api-0.1.0
        app.kubernetes.io/name: lights-api
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: lights-api
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "c4stus/lights-api:sha-b017315"
          imagePullPolicy: IfNotPresent
          command: ["./lights-api"]
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            limits:
              cpu: 300m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Source: lights-api/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lights-api
  labels:
    helm.sh/chart: lights-api-0.1.0
    app.kubernetes.io/name: lights-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
spec:
  ingressClassName: nginx
  rules:
    - host: "lightsapi.local.com"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: lights-api
                port:
                  number: 8080
